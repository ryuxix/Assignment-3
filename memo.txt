I believe that stack was the right choice for undo and redo because stack operates on a Last-In, First-Out principle or for short LIFO. When a user performs an action itâ€™s pushed onto a stack and when it undoes the action, the last action performed is popped off the stack. LIFO behavior mirrors the way undo and redo works because the most recent action is the first one you want to reverse. 
I think that queue was better for the help desk because queue is a linear data structure that follows a First In, First Out order or FIFO for short. When a customer contacts the help desk they are enqueued to the end of the line. The help desk agent then assists the customer who has been waiting the longest or the one at the front of the queue by dequeuing them. 
This shows that the customers are helped in the order they arrived which is fair and expected for a service system. How I think my implementation is different from the built in Python list is that with my list it uses a node, a queue, and a stack which can be more efficient than using some Python's built in lists for certain parts in a code. 
